;=============================================================
;	《汇编语言》 P206 显示字符串 【通用】
;
;功能： 调用子程序，在屏幕的特定位置显示指定的字符串.
;
;主程序：
;	字符串长度 = 			(cx)	
;	字符串首地址 = 			(ds:[si])	
;	字符串首地址所在的行 = 	(dh) 	(取值范围 0-24)
;	字符串首地址所在的列 = 	(dl) 	(取值范围 0-79)
;		>>> 将对应的显存缓冲区偏移量保存在 di. (释放 dx)
;	字符串颜色属性 = 		(bl) 	(如，00010111b -> 蓝底白字)
;		
;PS:
;	1. 显示缓冲区为 B8000h~BFFFFh 
;	屏幕(0-N行,0-M列开始) 对应的显存缓冲区偏移地址 = N*80*2+M*2
;		屏幕	显示缓冲区 
;		第0行	00h-9Fh =    0  - 159
;		第1行	A0h-13Fh=	160 - 319	
;		第2行	140h-1DFh = 160 - 479
;		..					..
;
;	2. 颜色属性
;	bit		7	6	5	4	3	2	1	0
;	含义	BL	R	G	B	I	R	G	B
;			--  ----------  -   ---------
;			闪烁   背景    高亮	  前景
;
;子程序():
;	调用入口参数，并将其转化为显存中的地址(显示缓冲区).
;	保存子程序中用到的寄存器.
;
;指令/子程序格式：
;	call 标号
;	标号 ..
;		 ..
;		ret
;
;举例：
;	在屏幕的 8行20列，用蓝底白字显示data段中的字符串.
;=============================================================


;=======================================================================
;主程序：
;	定义字符串长度 	- cx ；
;	字符串属性 		- bx (bl- 属性)
;	字符串首字母所在屏幕的行/列号 - dx (dh-行号； dl-列号)；
;		>>> 自定义字符串(db); 属性；长度；行/列号，即可完成各种显示效果！
;=======================================================================
assume cs:code

data segment
	db 'Welcome to assembly with zhq3211...' ;35个字符串
	db 'HN-YY-Lifeng'	;12个字符串
data ends

code segment
start:	;mov bh, 0		;bx 的低位保存属性
		mov bl, 17h		;字符串属性- 00010111b-蓝底白字
		mov cx, 35+12 	;35+12个字符串(用于子程序循环)
		mov dh, 8		;屏幕第8行 (0开始-N)
		mov dl, 20		;屏幕第20列 (0开始-M)
	
		;=================================
		;调用子函数1：计算显存缓冲区的偏移
		;=================================
		CALL VideoBuffer
	
		;=======================
		;调用子函数2：显示字符串
		;=======================
		CALL ShowStr
	
		mov ax,4c00H
		int 21H
	
	
;===================================================
;(子程序前，属性-bl, 长度-cx, 行/列号-dx 数据需保留) 
;子程序1：
;	计算所显存缓冲区(B8000h~BFFFFh)的偏移地址
;	B800h:偏移地址 ->(保存在di中)
;===================================================
VideoBuffer:
	push bx		;主程序 bx 的低位用于保存字符串属性，进栈保护
	
	mov al, dh	;第N行
	mov bl, 160
	mul bl		;ax= al*bl = N*80*2
	mov di, ax
	
	mov al, dl	;第M列
	mov bl, 2
	mul bl		;ax= al*bl = M*2
	
	add di, ax 	;di=di+ax = N*80*2+M*2 偏移地址保存在 di
	
	pop bx
ret	

	
;==========================================================
;(子程序前，属性-bx/bl, 长度-cx, 显存缓冲区-di 数据需保留)
;子程序2：
;	显示字符串.
;==========================================================
ShowStr:	
	mov si, 0	
Print:
	mov ax, data
	mov ds, ax
	mov ax, ds:[si]	;ax= 字符串 ASCII; bl=颜色属性 
	
	mov dx, 0B800h
	mov ds, dx
	mov ds:[di], ax	;ASCII
	mov ds:[di+1], bx	;属性
	
	inc si
	add di, 2
loop Print
ret
	
code ends
end start
